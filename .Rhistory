class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
str(flags)
?str
sapply(flags, unique)
vapply(flags, unique, number(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
?summary
swirl
swirl()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:5, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTER
LETTERS
sample(LETTERS)
flips <- sample(c(0, 1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- (100, size = 1, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(100, 100, 25)
rnorm(10, 100, 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
?replicate
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 < as.Date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
?strptime
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head()
head(cars)
plot(cars)
?plot
plot(cars, x = cars$speed, y = cars$dist)
str(cars)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance", xlab = "Speed")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
?par
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data(mtcars)
play()
str(mtcares)
str(mtcars)
nxt()
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
source('C:/Users/CarlosDaniel/ProgrammingAssignment2/cachematrix.R')
my_matrix
source('C:/Users/CarlosDaniel/ProgrammingAssignment2/cachematrix.R')
m <- matrix(1:10, nrow = 2, ncol = 5)
m
makeCacheMatrix(m)
cacheSolve()
cacheSolve(m)
cacheSolve(makeCacheMatrix, m)
debugSource('C:/Users/CarlosDaniel/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix, m)
debugSource('C:/Users/CarlosDaniel/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix, m)
cacheSolve(makeCacheMatrix(m))
cacheSolve(makeCacheMatrix, m)
source('~/.active-rstudio-document')
source('C:/Users/CarlosDaniel/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix, m)
source('C:/Users/CarlosDaniel/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix, m)
source('C:/Users/CarlosDaniel/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix, m)
x <- m
x
cacheSolve(makeCacheMatrix, x)
x <- cacheSolve(makeCacheMatrix, m)
source('C:/Users/CarlosDaniel/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix, m)
set(m)
makeCacheMatrix(m)
source('C:/Users/CarlosDaniel/ProgrammingAssignment2/cachematrix.R')
library(datasets)
data(iris)
?iris
lainfo <- data(iris)
header(lainfo)
head(lainfo)
head(iris)
lainfo <- iris
head(lainfo)
one <- mean(lainfo[Species='virginica', $Sepal.Length])
?tapply
one <- tapply(lainfo, 'Species', mean)
one <- tapply(lainfo, lainfo$species, mean)
one <- tapply(lainfo, lainfo$Species, mean)
library(swirl)
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
ok()
ok()
sapply(flags, class)
bye()
one <- tapply(lainfo$Sepal.Length, lainfo$Species, mean)
one
apply(iris[, 4], 2, mean)
rowMeans(iris[, 1:4])
colMeans(iris)
apply(iris, 2, mean)
apply(iris, 2, mean, na.rm = true)
apply(iris, 2, mean, na.rm = false)
lainfo <- data(mtcars)
data(mtcaras)
data(mtcars)
lainfo <- mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
?mtcars
head(lainfo)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429 - 82.63636
rpois(10)
?rpois
rpois(10,5)
rpois(10,1)
rpois(10,10)
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
bye()
swirl*
swirl()
swirl()
mydf <- read.csv(path2csv = path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv = 'path2csv', stringsAsFactors = FALSE)
?read.csv
mydf <- read.csv = (file = path2csv, stringsAsFactors = FALSE)
mydf <- read.csv = (file = 'path2csv', stringsAsFactors = FALSE)
mydf <- read.csv = (path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, r_version == !is.na())
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
select(cran, ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
cran3
cran
summarize(cran, avg_bytes = mean(size))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./preguno.csv")
read.table(preguno.csv)
read.table("preguno.csv")
preguno <- data.table(read.csv(preguno.csv))
preguno <- data.frame(read.csv("preguno.csv"))
head(preguno)
respuno <- preguno[, VAL == 24]
respuno <- preguno[, respuno$VAL == 24]
respuno <- preguno[, preguno$VAL == 24]
respuno <- preguno[preguno$VAL == 24]
respuno <- preguno[preguno$VAL == 24,]
nrow(respuno)
str(preguno)
respuno <- respuno[, respuno$VAL]
pregdos <- data.frame(read.csv(file.download("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")))
pregdos <- data.frame(read.csv(download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", pregdos)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile = "pregdos")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile = "pregdos.csv")
pregdos <- data.frame(pregdos.csv)
pregdos <- data.frame(read.table("pregdos.csv"))
pregdos
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile = "pregdos.xlsx")
pregdos <- data.frame(read.xlsx("pregdos.xlsx"))
library(xlsx)
install.packages("xlsx")
library(xlsx)
pregdos <- data.frame(read.xlsx("pregdos.xlsx"))
pregdos <- data.frame(read.xlsx("pregdos.xlsx", sheetIndex=1))
pregdos <- data.frame(read.xlsx("pregdos.xlsx", sheetIndex=1, rowIndex = 18:23, colIndex = 7:15))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile = "pregdos.xlsx", mode="wb")
pregdos <- data.frame(read.xlsx("pregdos.xlsx", sheetIndex=1, rowIndex = 18:23, colIndex = 7:15))
pregdos
dat <- pregdos
sum(dat$Zip*dat$Ext,na.rm=T)
library(x,;)
library(XML)
install.packages("XML")
library(XML)
pregtres <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal = TRUE)
pregtres <- xmlTreeParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal = TRUE)
pregtres <- data.frame(xmlTreeParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal = TRUE))
size(pregtres)
pregtres
rootNode <- xmlRoot(pregtres)
xmlName(rootNode)
names(rootNode)
?xpathSApply
resptres <- xpathSApply(rootNode, "//zipcode", 21231)
resptres <- xpathSApply(rootNode, "//zipcode", xmlValue)
?count
table(resptres)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", pregcuatro)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "./pregcuatro.csv")
DT <- fread(pregcuatro.csv)
library(data.table)
packages.install(data.table)
install.packages(data.table)
install.packages("data.table")
library(data.table)
DT <- fread(pregcuatro.csv)
DT <- fread("pregcuatro.csv")
clear()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./preguno.csv")
preguno <- read.csv("preguno.csv")
head(preguno)
table(preguno$VAL)
source('C:/Users/CarlosDaniel/ExData_Plotting1/plot1.R')
?download.file()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "Q2P2.csv")
library("sqldf")
install.packages("sqldf")
?read.csv()
acs <- read.csv("Q2P2.csv")
str(acs)
preg2 <- sqldf("select pwgtp1 from acs where AGEP < 50")
?sqldf()
?dbSendQuery()
link <- "http://biostat.jhsph.edu/~jleek/contact.html"
preg3 <- readLines(link)
close(link)
?nchar()
head(preg3)
preg3[1]
nchar(preg3[10])
nchar(preg3[20])
nchar(preg3[30])
nchar(preg3[100])
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", "pregcuatro.for")
respcuatro <- read.table("pregcuatro.for")
head("pregcuatro.for")
?read.table()
respcuatro <- read.table("pregcuatro.for", header = TRUE)
?read
?read.fwf()
respcuatro <- read.fwf("pregcuatro.for")
respcuatro <- read.fwf("pregcuatro.for", 9)
head(respcuatro)
str(respcuatro)
respcuatro <- read.fwf("pregcuatro.for", widths = 9)
respcuatro <- read.fwf("pregcuatro.for", widths = c(1,2,3,4,5,6,7,8,9))
head(respcuatro)
respcuatro <- read.fwf("pregcuatro.for", widths = c(1,2,3,4,5,6,7,8,9), skip = 3)
head(respcuatro)
respcuatro <- read.fwf("pregcuatro.for", widths = c(1,2,3,4,5,6,7,8,9), skip = 4)
head(respcuatro)
respcuatro[,4]
sapply(respcuatro, sum())
sapply(respcuatro, sum
()
)
sapply(respcuatro, sum())
sapply(respcuatro, sum)
str(respcuatro)
?as.numeric()
respcuatro[,6] <- as.numeric(respcuatro[,6])
str(respcuatro)
?sum()
sum(respcuatro[,6])
sum(respcuatro[,7])
sum(respcuatro[,4])
respcuatro <- read.fwf("pregcuatro.for", widths = c(9,4,-1,3,4,-1,3,4,-1,3), skip = 4)
head(respcuatro)
respcuatro <- read.fwf("pregcuatro.for", widths = c(-1,9,4,-1,3,4,-1,3,4,-1,3), skip = 4)
head(respcuatro)
respcuatro <- read.fwf("pregcuatro.for", widths = c(-1,9,-1,4,-1,3,4,-1,3,4,-1,3), skip = 4)
head(respcuatro)
?read.fwf
respcuatro <- read.fwf("pregcuatro.for", widths = c(-1,9,4,-1,3,4,-1,3,4,-1,3), skip = 4)
head(respcuatro)
respcuatro <- read.fwf("pregcuatro.for", widths = c(-1,9,-3,4,-1,3,4,-1,3,4,-1,3), skip = 4)
head(respcuatro)
respcuatro <- read.fwf("pregcuatro.for", widths = c(-1,9,-3,4,3,4,-1,3,4,-1,3), skip = 4)
respcuatro <- read.fwf("pregcuatro.for", widths = c(-1,9,-3,4,3,4,-1,3,4,-1,3), skip = 4)
head(respcuatro)
respcuatro <- read.fwf("pregcuatro.for", widths = c(-1,9,-3,6,3,4,-1,3,4,-1,3), skip = 4)
head(respcuatro)
respcuatro <- read.fwf("pregcuatro.for", widths = c(-1,9,-3,6,4,4,-1,3,4,-1,3), skip = 4)
head(respcuatro)
respcuatro <- read.fwf("pregcuatro.for", widths = c(-1,9,-3,6,-1,4,4,-1,3,4,-1,3), skip = 4)
head(respcuatro)
respcuatro <- read.fwf("pregcuatro.for", widths = c(-1,9,-3,6,-1,4,-3,6,-1,4,-3,6,-1,4), skip = 4)
head(respcuatro)
respcuatro <- read.fwf("pregcuatro.for", widths = c(-1,9,-3,6,-1,4,-3,5,-1,4,-3,5,-1,4), skip = 4)
head(respcuatro)
sum(respcuatro[,4])
library(swirl)
swirl()
bye()
library(swirl)
swirl()
library(dplyr)
?tbl_df()
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
?summarize
summarize(by_package, mean(size))
?n
?n_distinct
submit()
print(tbl, pack_sum)
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
cran %>% select() %>% print
cran %>% select() %>% print()
submit()
submit()
submit()
submit()
submit()
?qunif
qunif(0.75, 0, 1)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
?lm
data(mtcars)
lm(mtcars$mpg ~ mtcars$weight)
names(mtcars)
lm(mtcars$mpg ~ mtcars$wt)
str(mtcars)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
sd(x)
mean(x)
(8.58 - 9.31) / 0.75
(8.58 - 9.31) / 0.7511325
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
lm(y ~ x)
lm(x ~ y)
?lm
lm(y ~ x)
lm(y ~ 0 + x)
?bprob
?pbinom()
qbinom?
?qbinom
?qnorm
qnorm(.95, 1100, 75)
?pbimon
?pbinom
pbinom(3, 5, 0.5)
1-.8125
qnorm(0.975)
sqrt(0.56 * 0.44 / 100)
plot(res$steps, res$date)
setwd("C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/5. Reproducible Research/RepData_PeerAssessment1")
data <- read.csv("activity.csv")
data$date <- as.character(data$date)
data$date <- as.Date(data$date, format = "%Y-%m-%d")
res <- aggregate(data$steps ~ data$date, data, sum)
names(res) <- c("date", "steps")
hist(res$steps, xlab = "Total amount of steps taken by day", main = "Distribution of total steps taken per day", col = "orange")
themean <- mean(res$steps)
themedian <- median(res$steps)
plot(res$steps, res$date)
is.ts(res$date)
plot(res$date, res$steps)
resavg <- aggregate(data$steps ~ data$date, data, mean)
names(resavg) <- c("date", "steps")
plot(resavg$date, resavg$steps)
plot(res$date, res$steps)
plot(resavg$date, resavg$steps)
abline(h = mean(resavg$steps))
